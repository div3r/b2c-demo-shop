<?php

{{ include('Partials/license.twig') }}

namespace {{ organization }}\Zed\{{ module }}\Business;

use Generated\Shared\Transfer\{{ module }}Transfer;
use Spryker\Zed\Kernel\Business\AbstractFacade;

/**
 * @method \{{ organization }}\Zed\{{ module }}\Business\{{ module }}BusinessFactory getFactory()
 */
class {{ module }}Facade extends AbstractFacade implements {{ module }}FacadeInterface
{

    /**
     * @param {{ module }}Transfer ${{ module | lower }}Transfer
     *
     * @return {{ module }}Transfer
     */
    public function create{{ module }}({{ module }}Transfer ${{ module | lower }}Transfer): {{ module }}Transfer
    {
        return $this->getFactory()->create{{ module }}Writer()->create{{ module }}(${{ module | lower }}Transfer);
    }

    /**
    * @param {{ module }}Transfer ${{ module | lower }}Transfer
    *
    * @return {{ module }}Transfer
    */
    public function save{{ module }}({{ module }}Transfer ${{ module | lower }}Transfer): {{ module }}Transfer
    {
        return $this->getFactory()->create{{ module }}Writer()->update{{ module }}(${{ module | lower }}Transfer);
    }

    /**
    * @param {{ module }}Transfer ${{ module | lower }}Transfer
    *
    * @return {{ module }}Transfer|null
    */
    public function find{{ module }}({{ module }}Transfer ${{ module | lower }}Transfer): ?{{ module }}Transfer
    {
        return $this->getFactory()->create{{ module }}Reader()->find{{ module }}ByTransfer(${{ module | lower }}Transfer);
    }

    /**
    * @param {{ module }}Transfer ${{ module | lower }}Transfer
    *
    * @return {{ module }}Transfer[]
    */
    public function find{{ module }}s({{ module }}Transfer ${{ module | lower }}Transfer): array
    {
    return $this->getFactory()->create{{ module }}Reader()->find{{ module }}sByTransfer(${{ module | lower }}Transfer);
    }

    /**
    * @param {{ module }}Transfer ${{ module | lower }}Transfer
    *
    * @return void
    */
    public function delete{{ module }}({{ module }}Transfer ${{ module | lower }}Transfer): void
    {
        $this->getFactory()->create{{ module }}Writer()->delete{{ module }}(${{ module | lower }}Transfer);
    }

}
